'use strict';
Object.defineProperty(exports, '__esModule', { value: true });
const fs_1 = require('fs');
const path_1 = require('path');
// Use absolute paths instead of relative paths
const ROOT_DIR = path_1.resolve(__dirname, '..');
const TARGET_DIR = path_1.resolve(
  ROOT_DIR,
  'src/components/CryptocurrencyIcon'
);
const TARGET_FILE = path_1.resolve(TARGET_DIR, 'get-dynamic-icon.ts');
const ICON_SOURCE_DIR = path_1.resolve(
  ROOT_DIR,
  'node_modules/@bitgo-forks/cryptocurrency-icons/react'
);
const generateCurrencyIcons = () => {
  // Make sure the target directory exists
  if (!fs_1.existsSync(TARGET_DIR)) {
    fs_1.mkdirSync(TARGET_DIR, { recursive: true });
  }
  // Check if source directory exists
  if (!fs_1.existsSync(ICON_SOURCE_DIR)) {
    console.error(`Error: Icon source directory not found: ${ICON_SOURCE_DIR}`);
    console.log(
      'Make sure cryptocurrency-icons package is installed correctly.'
    );
    process.exit(1);
  }
  const icons = fs_1.readdirSync(ICON_SOURCE_DIR);
  const content = icons
    .map(iconFile => {
      const fileName = iconFile.split('.')[0];
      // add alternate icon name for the 'index' icon
      const iconName = fileName === 'index' ? 'indexIcon' : fileName;
      return `    case '${iconName}':\n      return lazy(() => import('@bitgo-forks/cryptocurrency-icons/react/${iconName}'));`;
    })
    .join('\n');
  const template = `/* eslint-disable */
// DO NOT MODIFY THIS FILE. IT IS AUTO-GENERATED BY /scripts/generate-currency-icons.
import { lazy } from 'react';
export const getDynamicIcon = (name: string) => {
  switch (name) {
${content}
    default:
      return null;
  }
};
`;
  fs_1.writeFileSync(TARGET_FILE, template);
  console.log(`Successfully generated dynamic icons at: ${TARGET_FILE}`);
};
generateCurrencyIcons();
